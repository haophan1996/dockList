*___Check app is installed
appname="App_name.app"
if find /Applications -iname "$appname" -maxdepth 1 -type d | grep -q "$appname"; then
    echo "$appname is installed."
else
    echo "$appname is not installed."
fi


*   Script Dock

#!/bin/bash
mkdir /tmp/dock
cd /tmp/dock
curl -l -O "https://raw.githubusercontent.com/haophan1996/dockList/main/BB_Docklist.command"
chmod +x BB_Docklist.command  
sudo -u $(stat -f "%Su" /dev/console) /bin/sh <<'END'
cp "/tmp/Dock/BB_Docklist.command" "$HOME/Desktop"
rm -rf /tmp/dock

*   Script Google Drive

#!/bin/bash
mkdir /tmp/drive
cd /tmp/drive
curl -L -o /tmp/drive/GoogleDrive.dmg "https://dl.google.com/drive-file-stream/GoogleDrive.dmg"
hdiutil mount GoogleDrive.dmg
sudo installer -pkg /Volumes/Install\ Google\ Drive/GoogleDrive.pkg -target "/Volumes/Macintosh HD"
hdiutil unmount /Volumes/Install\ Google\ Drive/
sleep 15
rm -rf /tmp/drive

*   Script Zoom

#!/bin/bash
cd /tmp 
rm -rf zoomusInstallerFull.dmg 
if [[ $(uname -m) == 'arm64' ]]; then
    curl -L -o /tmp/zoomusInstallerFull.pkg "https://zoom.us/client/latest/Zoom.pkg?archType=arm64"
else
    curl -L -o /tmp/zoomusInstallerFull.pkg "https://zoom.us/client/latest/zoomusInstallerFull.pkg"
fi
/usr/sbin/installer -pkg /tmp/zoomusInstallerFull.pkg -target /Applications/
rm -rf zoomusInstallerFull.pkg

* Script Acrobat Reader

#!/bin/bash
cd /tmp 
curl -L -o /tmp/AcroRdrDC_2300320215_MUI.dmg "https://ardownload2.adobe.com/pub/adobe/reader/mac/AcrobatDC/2300320215/AcroRdrDC_2300320215_MUI.dmg"
hdiutil attach AcroRdrDC_2300320215_MUI.dmg 
/usr/sbin/installer -pkg /Volumes/AcroRdrDC_2300320215_MUI/AcroRdrDC_2300320215_MUI.pkg -target /Applications/
sleep 20
hdiutil detach /Volumes/AcroRdrDC_2300320215_MUI
rm -rf AcroRdrDC_2300320215_MUI.dmg 

* Script docker

#!/bin/bash
cd /tmp 
curl -L -o /tmp/Docker.dmg "https://desktop.docker.com/mac/main/amd64/Docker.dmg?utm_source=docker&utm_medium=webreferral&utm_campaign=dd-smartbutton&utm_location=module"
hdiutil attach Docker.dmg
mv /Volumes/Docker/Docker.app /Applications 
hdiutil detach /Volumes/Docker
rm -rf Docker.dmg

* Script Postman

#!/bin/bash
cd /tmp 
rm -rf Postman.zip 
if [[ $(uname -m) == 'arm64' ]]; then
    curl -L -o /tmp/Postman.zip "https://dl.pstmn.io/download/latest/osx_arm64"
else
    curl -L -o /tmp/Postman.zip "https://dl.pstmn.io/download/latest/osx_64"
fi
unzip Postman.zip 
mv "Postman.app" /Applications
rm -rf Postman.zip 
rm -rf Postman.app

* Script Github Desktop

#!/bin/bash
cd /tmp 
rm -rf GithubDesktop.zip 
if [[ $(uname -m) == 'arm64' ]]; then
    curl -L -o /tmp/GithubDesktop.zip "https://central.github.com/deployments/desktop/desktop/latest/darwin-arm64"
else
    curl -L -o /tmp/GithubDesktop.zip "https://central.github.com/deployments/desktop/desktop/latest/darwin"
fi
unzip GithubDesktop.zip 
mv "GitHub Desktop.app" /Applications
rm -rf GithubDesktop.zip 
rm -rf GitHub\ Desktop.app

* Script Absract

#!/bin/bash
cd /tmp 
rm -rf Abstract.zip 
curl -L -o /tmp/Abstract.zip "https://api.goabstract.com/releases/latest/download"
unzip Abstract.zip 
mv "Abstract.app" /Applications
rm -rf Abstract.zip 
rm -rf Abstract.app

* Script Zeplin

#!/bin/bash
cd /tmp 
rm -rf Zeplin.zip 
curl -L -o /tmp/Zeplin.zip "https://zpl.io/download-mac"
unzip Zeplin.zip
mv "Zeplin.app" /Applications
rm -rf Zeplin.zip 
rm -rf Zeplin.app

* Script Sketch
 
#!/bin/bash
url="https://www.sketch.com/downloads/mac/"
download_url=$(curl -s "$url" | grep -o 'https://download\.sketch\.com/sketch[^"]*' | sed -n '2p')
if [ -n "$download_url" ]; then
    echo "Download URL: $download_url"
    cd /tmp 
    rm -rf Sketch.zip 
    curl -L -o /tmp/Sketch.zip $download_url
    unzip Sketch.zip
    mv "Sketch.app" /Applications
    rm -rf Sketch.zip 
    rm -rf Sketch.app
else
  echo "Failed to retrieve the download link."
fi

* Script Optimizely

#!/bin/bash
cd /tmp 
curl -L -o /tmp/Optimizely.dmg "http://app.optimizely.com/desktop/download?platform=mac"
hdiutil attach Optimizely.dmg
mv /Volumes/Optimizely/Optimizely.app /Applications 
hdiutil detach /Volumes/Optimizely
rm -rf Optimizely.dmg

* Script install truly

#!/bin/bash
cd /tmp 
curl -L -o /tmp/Truly.dmg "https://s3.amazonaws.com/truly-app-upgrade-files/desktop-app/Truly-1.4.1-universal.dmg"
hdiutil attach Truly.dmg
mv /Volumes/Optimizely/Truly.app /Applications 
hdiutil detach /Volumes/Truly
rm -rf Truly.dmg


* Script Pycham CE

#!/bin/bash
cd /tmp 
rm -rf pycharm.dmg
if [[ $(uname -m) == 'arm64' ]]; then
    curl -L -o /tmp/pycharm.dmg "https://download-cdn.jetbrains.com/python/pycharm-community-2023.1.3.dmg"
else
    curl -L -o /tmp/pycharm.dmg "https://download-cdn.jetbrains.com/python/pycharm-community-2023.1.3-aarch64.dmg"
fi
hdiutil attach pycharm.dmg
mv /Volumes/PyCharm\ CE/PyCharm\ CE.app /Applications
hdiutil detach /Volumes/PyCharm\ CE 
rm -rf pycharm.dmg

* SCript VSCODE

#!/bin/bash
cd /tmp 
curl -L -o /tmp/VSCode-darwin-universal.zip "https://code.visualstudio.com/sha/download?build=stable&os=darwin-universal"
unzip VSCode-darwin-universal.zip
mv "Visual Studio Code.app" /Applications
rm -rf VSCode-darwin-universal.zip
rm -rf Visual\ Studio\ Code.app
 

* PKG Chrome

https://dl.google.com/chrome/mac/stable/accept_tos%3Dhttps%253A%252F%252Fwww.google.com%252Fintl%252Fen_ph%252Fchrome%252Fterms%252F%26_and_accept_tos%3Dhttps%253A%252F%252Fpolicies.google.com%252Fterms/googlechrome.pkg

* PKG Python

https://www.python.org/ftp/python/3.11.4/python-3.11.4-macos11.pkg